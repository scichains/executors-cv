{
  "app": "executor",
  "version": "0.0.1",
  "category": "matrices.misc",
  "name": "Quick emphasize boundaries (horizontal/vertical)",
  "description": "Emphasizes boundaries: sub-ranges of horizontal and/or vertical lines of <code>values</code> in the matrix with high gradient. It means, that slopes of the function, represented by this array, with a large difference in values are replaced with a step function, where the border has a width of 1. This operation is performed for every horizontal row and/or for every vertical column in the matrix.<p>More formal specification. Let V(x) is the function from integer argument x, represented by <code>values</code> array (horizontal or vertical line in the matrix): V(i)=<code>values[i]</code>, <code>0</code>&nbsp;&le;&nbsp;i&nbsp;&lt;&nbsp;<code>dim</code>. This method finds all ranges x1..x2, where:</p> <ul>     <li><code>0</code> &le; x1 &le; x2 &lt <code>dim</code>;</li>     <li>the function is strictly monotone inside the range: V(x1)&lt;V(x1+1)&lt;...&lt;V(x2) or     V(x1)&gt;V(x1+1)&gt;...&gt;V(x2);     if property <b>processAscending</b> is cleared, first type of ranges     is skipped (not changed),     if property <b>processDescending</b> is cleared, second type of ranges is skipped (not changed), if both are cleared, this method does nothing;</li>      <li>total change of the function at this range is <b>large</b>, i.e. |V(x1)&minus;V(x2)|      &ge; <b>minimalChange</b>;</li>      <li>length of the range x2&minus;x1+1 &le; D, where D = <b>slopeWidth</b>,      <b>or</b>, maybe, it is not so, but <b>allowLongSlopes</b>      flag is set <b>and</b> and the following condition is fulfilled:<br>      &nbsp;&nbsp;&nbsp;&nbsp;for every sub-range with length D the total change of the function is also      <b>large</b>, i.e. for every x, x1&le;x&le;x2&minus;D+1, we have      |V(x)&minus;V(x+D&minus;1)| &ge; <b>minimalChange</b>;      </li>      <li>x1..x2 is a <i>maximal</i> range with this properties, i.e. for any other      range x'1..x'2, where x'1&lt;x1 and x'2&gt;x2, one of the previous conditions is not fulfilled.</li> </ul> <p>For each range x1..x2 with the specified properties this method replaces every value V(x) inside this range (x1&lt;x&lt;x2) with the nearest from two values V(x1) and V(x2). Values, exactly equal to (V(x1)+V(x2))/2, are replaced with V(x2).</p> <p>Note: default values <b>minimalChange</b>=0 and <b>slopeWidth</b>=1 provides emphasizing <i>every</i> slope, regardless on its length and value of the function change.</p><p>Note: for binary matrix, this function does not tries to emphasize it and returns it unchanged.",
  "tags": [
    "matrices"
  ],
  "id": "0e364c0c-6514-4977-a8dd-a316ff819c82",
  "language": "java",
  "java": {
    "class": "net.algart.executors.modules.cv.matrices.misc.QuickEmphasizeBoundaries"
  },
  "in_ports": [
    {
      "value_type": "mat",
      "name": "input"
    }
  ],
  "out_ports": [
    {
      "value_type": "mat",
      "name": "output"
    }
  ],
  "controls": [
    {
      "name": "autoConvertToGrayscale",
      "description": "If set and if the source image is not grayscale, it is converted to grayscale. This function is oriented to grayscale image, though can produce reasonable result also for RGB ones (channel-by-channel).",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    },
    {
      "name": "minimalChange",
      "description": "For this and following parameters see description of the function",
      "value_type": "double",
      "edition_type": "value",
      "default": 0.0
    },
    {
      "name": "slopeWidth",
      "value_type": "int",
      "edition_type": "value",
      "default": 1
    },
    {
      "name": "allowLongSlopes",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true
    },
    {
      "name": "processAscending",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true,
      "advanced": true
    },
    {
      "name": "processDescending",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true,
      "advanced": true
    },
    {
      "name": "exactHalfSum",
      "caption": "Exact half-sum",
      "description": "While emphasizing a slope x1..x2, we replace values, exactly equal to (V(x1)+V(x2))/2, with V(x2) (see the description of the function). But what does mean (V(x1)+V(x2))/2 here?\nIf this flag is set, this expression is interpreted mathematically exactly. If the element type is integer and if the half-sum (V(x1)+V(x2))/2 is not integer (it is k+0.5, where k is an integer), it means that there are no values equal to this half-sum.\nIf this flag is cleared, the expression (V(x1)+V(x2))/2 for integer element types is interpreted as ⌊(V(x1)+V(x2))/2⌋ (maximal integer, not greater than the exact half-sum).\nFor floating-point element types this flag is ignored: (V(x1)+V(x2))/2 is always calculated as 0.5*(V(x1)+V(x2)).\nUsually this flag should be set: it does not affect the performance.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true,
      "advanced": true
    },
    {
      "caption": "What directions to emphasize?",
      "name": "emphasizedDirections",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "HORIZONTAL",
          "caption": "Horizontal only"
        },
        {
          "value": "VERTICAL",
          "caption": "Vertical only"
        },
        {
          "value": "HORIZONTAL_AND_VERTICAL",
          "caption": "Horizontal, then vertical"
        },
        {
          "value": "VERTICAL_AND_HORIZONTAL",
          "caption": "Vertical, then horizontal"
        }
      ],
      "default": "HORIZONTAL_AND_VERTICAL"
    },
    {
      "name": "rawValues",
      "caption": "Raw values",
      "description": "If set, the \"minimalChange\" parameter is a raw value; for example, for byte matrix it should be in range 0..255, for 16-bit matrix in range 0..65535, for floating-point in 0..1 range.\nIf cleared, the \"minimalChange\" parameter should be from 0 (black) to 1 (white).",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    }
  ]
}
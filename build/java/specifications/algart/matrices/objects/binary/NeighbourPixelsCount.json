{
  "app": "executor",
  "version": "0.0.1",
  "category": "matrices.objects.binary",
  "name": "Check neighbour pixels count",
  "tags": [
    "matrices"
  ],
  "id": "7e90db38-ce68-4b1c-a126-9d73a775dca0",
  "language": "java",
  "java": {
    "class": "net.algart.executors.modules.cv.matrices.objects.binary.NeighbourPixelsCount"
  },
  "in_ports": [
    {
      "value_type": "mat",
      "name": "input",
      "hint": "The source binary matrix"
    }
  ],
  "out_ports": [
    {
      "value_type": "mat",
      "name": "output",
      "hint": "Check result: binary matrix, containing 1 for some pixel if the value K for this pixel\nis between minimal and maximal number of neughbours\n(see the parameters below), 0 in other case"
    },
    {
      "value_type": "mat",
      "name": "Q",
      "hint": "Actual result Q (=K+1): the number of unit pixels (1) in the source matrix in the square 9-pixel aperture 3x3 (in a case of 8-connectivity)\nor in the 5-pixel cross 3x3 {(x,y),(x+1,y),(x,y+1),(x−1,y),(x,y−1)} (in a case of 4-connectivity) with the center at this pixel (x,y).\nIn other words, Q is the number of neighbouring unit pixels (0..4 for 4-connectivity, 0..8 for 8-connectivity) + 1 or 0 if the central pixel is 1 or 0"
    }
  ],
  "controls": [
    {
      "caption": "Connectivity type",
      "name": "connectivityType",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "STRAIGHT_AND_DIAGONAL",
          "caption": "8-connectivity"
        },
        {
          "value": "STRAIGHT_ONLY",
          "caption": "4-connectivity"
        }
      ],
      "default": "STRAIGHT_AND_DIAGONAL"
    },
    {
      "caption": "Minimal K (number of neighbours)",
      "name": "minNumberOfNeighbours",
      "value_type": "int",
      "edition_type": "value",
      "default": 0
    },
    {
      "caption": "Maximal K (number of neighbours)",
      "name": "maxNumberOfNeighbours",
      "description": "For every pixel (x,y) of the source binary matrix (unit or zero), we count the number Q of unit pixels (1) in the square 9-pixel aperture 3x3 (in a case of 8-connectivity) or in the 5-pixel cross 3x3 {(x,y),(x+1,y),(x,y+1),(x−1,y),(x,y−1)} (in a case of 4-connectivity) with the center at this pixel (x,y). The value Q is returned in \"Q\" integer matrix.\nLet K=Q−1.\nActually K is the number of neighbours of the central pixel, decreased by 1 if the central pixel is zero. For example, K=0 for isolated unit pixels or for zero (background) pixels having exactly 1 unit neighbour. Possible values for K are −1..8 for 8-connectiviry or −1..4 for 4-connectivity; −1 is possible only at zero pixels of the source matrix (if the flag \"Unit pixels only\" is not set).\nThe check result is a binary matrix, where each pixel is 1 if and only if \"Minimal number of neighbours\" ≤ K ≤ \"Maximal number of neighbours\" for corresponding central pixel of the source.",
      "value_type": "int",
      "edition_type": "value",
      "default": 0
    },
    {
      "caption": "Unit pixels only",
      "name": "unitPixelsOnly",
      "description": "If set, the result contains only pixels, for which the source matrix contains 1 (background is cleared)",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true
    }
  ]
}
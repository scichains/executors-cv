{
  "app": "executor",
  "version": "0.0.1",
  "category": "matrices.objects.binary.boundaries",
  "name": "Scan/measure objects by boundaries",
  "tags": [
    "matrices"
  ],
  "id": "d3d56bdf-07d8-4e37-ae5a-482160cd6a80",
  "language": "java",
  "java": {
    "class": "net.algart.executors.modules.cv.matrices.objects.binary.boundaries.ScanAndMeasureBoundaries"
  },
  "in_ports": [
    {
      "value_type": "mat",
      "name": "objects"
    }
  ],
  "out_ports": [
    {
      "value_type": "mat",
      "name": "labels",
      "hint": "New labels matrix: index of the boundary, surrounding this object.\nNote: these labels are started FROM 1, not from 0!"
    },
    {
      "value_type": "numbers",
      "name": "object_label",
      "hint": "Label of object: pixel value of the source matrix.\nUsed while scanning non-binary label matrix."
    },
    {
      "value_type": "numbers",
      "name": "area",
      "hint": "Area: positive for particles, negative for pores."
    },
    {
      "value_type": "numbers",
      "name": "sqrt_area",
      "hint": "sqrt(|S|): square roots from absolute values of areas."
    },
    {
      "value_type": "numbers",
      "name": "perimeter"
    },
    {
      "value_type": "numbers",
      "name": "size",
      "hint": "Size of a particle is the maximum from 4 values: width=max(x)−min(x)), height=max(y)−min(y))\nand two diagonal dimensions (max(x+y)−min(x+y))/√2̅, (max(x−y)−min(x−y))/√2̅.\nIt is equal to maximum from 4 projections of the containing octagon (with sides, parallel to axes and diagonals)."
    },
    {
      "value_type": "numbers",
      "name": "shape_factor",
      "caption": "shape factor",
      "hint": "Shape factor: sqrt(4πS)/P, S — area, P — perimeter."
    },
    {
      "value_type": "numbers",
      "name": "containing_octagon_area",
      "caption": "containing octagon area",
      "hint": "Area of the minimal containing octagon with sides, parallel to axes and diagonals.",
      "alias": [
        "circumscribed_octagon_area"
      ]
    },
    {
      "value_type": "numbers",
      "name": "centroid",
      "hint": "Pair of centroid coordinates (x,y)."
    },
    {
      "value_type": "numbers",
      "name": "containing_rectangle",
      "caption": "containing rectangle",
      "hint": "For rectangle x₁≤x≤x₂, y₁≤y≤y₂, we return 4 numbers (x₁+x₂)/2, (y₁+y₂)/2, x₂−x₁, y₂−y₁ (i.e. center and sizes)."
    },
    {
      "value_type": "numbers",
      "name": "internal_boundary",
      "caption": "internal boundary",
      "hint": "Indicator of internal boundary: 1 for internal boundary, 0 for external boundary."
    },
    {
      "value_type": "numbers",
      "name": "nesting_level",
      "caption": "nesting level",
      "hint": "Nesting level: 1 for a particle, 2 for its pores, 3 for particles inside the pores, etc."
    },
    {
      "value_type": "scalar",
      "name": "number_of_objects",
      "caption": "number of objects",
      "hint": "Total number of measured objects (it is equal to the maximal index of the returned labels)."
    }
  ],
  "controls": [
    {
      "name": "pixelSize",
      "caption": "Pixel size",
      "description": "The side of every pixel in some units, for example, in microns. All parameters of objects will be measured in this units (microns or square microns).",
      "value_type": "double",
      "edition_type": "value",
      "default": 1.0
    },
    {
      "name": "connectivityType",
      "caption": "Connectivity type",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "STRAIGHT_AND_DIAGONAL",
          "caption": "8-connectivity"
        },
        {
          "value": "STRAIGHT_ONLY",
          "caption": "4-connectivity"
        }
      ],
      "default": "STRAIGHT_AND_DIAGONAL"
    },
    {
      "name": "boundaryType",
      "caption": "Boundary type",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "MAIN_BOUNDARIES",
          "caption": "main boundaries (pores ignored)"
        },
        {
          "value": "ALL_BOUNDARIES",
          "caption": "all boundaries (objects and pores)"
        },
        {
          "value": "ALL_EXTERNAL_BOUNDARIES",
          "caption": "externals boundaries (objects)"
        },
        {
          "value": "ALL_INTERNAL_BOUNDARIES",
          "caption": "internals boundaries (pores)"
        }
      ],
      "default": "MAIN_BOUNDARIES"
    },
    {
      "name": "contourLineType",
      "caption": "Model of object boundaries",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "STRICT_BOUNDARY",
          "caption": "strict boundary: polyline, consisting of sides of square pixeles, separating objects and background"
        },
        {
          "value": "PIXEL_CENTERS_POLYLINE",
          "caption": "polyline between centers of boundary pixels"
        },
        {
          "value": "SEGMENT_CENTERS_POLYLINE",
          "caption": "polyline between middles of segments — sides of square pixels, separating objects and background"
        }
      ],
      "default": "STRICT_BOUNDARY"
    },
    {
      "name": "maxLabelLevel",
      "caption": "Maximal nesting level",
      "description": "Maximal nesting level of drawn labels: 0 to draw all objects and pores (so, this argument is ignored), 1 to draw only main objects (pores are filled), 2 to draw objects and their pores (withouts little objects inside pores), 3 to draw objects, their pores and objects inside pores with filled next-level pores, etc.",
      "hint": "Note: in the mode \"externals boundaries\" all pores are always 0 in the resulting labels.\nSo, this limit can lead to multicomponent object, for example,\nif it is 1, we will have the single label for the main objects TOGETHER with all particles in its pores.\nAnd the analogous situation in the mode \"internal boundaries\".",
      "value_type": "int",
      "edition_type": "value",
      "default": 0
    },
    {
      "name": "objectsInterpretation",
      "caption": "What to do with non-binary image?",
      "description": "Convert to binary: its intensity is automatically converted to binary matrix (0 into bit 0, all other values into bit 1).\nNon-zero labelled objects: the source matrix must be binary or must contain integer labels of objects; this function analyses their boundaries. In this case, the matrix must be 1-channel, elements must be integer, zero labels (0) means background.\nLabelled objects: the same, but zero labels is interpreted as a usual object. (In previous mode boundaries of the background areas are not processed.)\nFor binary source this function always use the 1st mode.\nNote: while scanning labels, the \"nesting level\" is not correct.",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "BINARY",
          "caption": "Convert to binary"
        },
        {
          "value": "NON_ZERO_LABELS",
          "caption": "Labelled objects (non-zero)"
        },
        {
          "value": "LABELS",
          "caption": "Labelled objects"
        }
      ],
      "default": "BINARY"
    },
    {
      "name": "visibleResult",
      "caption": "Visible result",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "labels"
        },
        {
          "value": "area"
        },
        {
          "value": "sqrt_area"
        },
        {
          "value": "perimeter"
        },
        {
          "value": "size"
        },
        {
          "value": "shape_factor"
        },
        {
          "value": "containing_octagon_area"
        },
        {
          "value": "centroid"
        },
        {
          "value": "containing_rectangle"
        },
        {
          "value": "nesting_level"
        },
        {
          "value": "number_of_objects"
        }
      ],
      "default": "labels"
    }
  ]
}
{
  "app": "executor",
  "version": "0.0.1",
  "category": "matrices.objects",
  "name": "Values at labelled objects",
  "id": "edfca28a-752a-46b3-a1d8-2e0929a5ad06",
  "language": "java",
  "java": {
    "class": "net.algart.executors.modules.cv.matrices.objects.ValuesAtLabelledObjects"
  },
  "tags": [
    "java",
    "images",
    "express"
  ],
  "in_ports": [
    {
      "value_type": "mat",
      "name": "input",
      "hint": "Source image: all statistics are calculated for pixel values of this image inside objects, specified by \"labels\""
    },
    {
      "value_type": "mat",
      "name": "labels",
      "hint": "Labels of the source objects, for which this function calculates statistics\n(1 value for the object #1, 2 for the object #2, etc.; zero values mean the background and are not measured)"
    },
    {
      "value_type": "mat",
      "name": "mask",
      "hint": "[Optional] Binary mask: zero pixels at this matrix are also considered as background and excluded from analysis"
    },
    {
      "value_type": "mat",
      "name": "level",
      "hint": "[Optional] If the statistics is a percentile or based on percentiles, there is a question: what is the percentile for multichannel (color) source image?\n(Because the concept \"percentile\" is defined only for monochrome single-channel values: all values are sorted by increasing, and we take an element in the given position.)\nIf \"level\" is specified, it should be grayscale matrix, and we define that the value of the given percentile inside the object is the value of such a pixel,\nfor which the corresponding pixel of (monochrome) \"level\" matrrix is equal to the percentile, calculated on \"level\" matrix.\nFor example, for percentile 1.0 (maximum) we find the pixel of the object with maximal \"level\" and return the value of same pixel from the source image.\n(If there are several pixels with the required \"level\", we calculate average value of all such pixels from the source image.)\nIf \"level\" is not grayscale, its channel #\"Level's matrix channel\" is used (NOT intensity of color \"level\" image).\nIf \"level\" is not specified, we use the source image and its channel #\"Level's matrix channel\" instead.\n(Note that all this logic is ignored if \"Separate percentiles for each channel\" flag is set.)"
    }
  ],
  "out_ports": [
    {
      "value_type": "numbers",
      "name": "mean",
      "hint": "Mean: average of all pixel values at the labelled object"
    },
    {
      "value_type": "numbers",
      "name": "mean_square",
      "hint": "Mean square: average of squares of all pixel values at the labelled object"
    },
    {
      "value_type": "numbers",
      "name": "standard_deviation",
      "hint": "Standard deviation of the values of all pixels at the labelled object"
    },
    {
      "value_type": "numbers",
      "name": "low_percentile",
      "hint": "Low (1st) percentile of pixel values at the labelled object"
    },
    {
      "value_type": "numbers",
      "name": "high_percentile",
      "hint": "High (2nd) percentile of pixel values at the labelled object"
    },
    {
      "value_type": "numbers",
      "name": "percentile_A",
      "hint": "Some additional percentile A (in necessary)"
    },
    {
      "value_type": "numbers",
      "name": "percentile_B",
      "hint": "Some additional percentile B (in necessary)"
    },
    {
      "value_type": "numbers",
      "name": "percentile_C",
      "hint": "Some additional percentile C (in necessary)"
    },
    {
      "value_type": "numbers",
      "name": "percentiles_range",
      "hint": "Difference high percentile − low percentile"
    },
    {
      "value_type": "numbers",
      "name": "truncated_mean",
      "hint": "Truncated mean: average of pixels, that ≥low percentile and ≤high percentile"
    },
    {
      "value_type": "numbers",
      "name": "cardinality",
      "hint": "Cardinality (area): number of pixels of the labelled object"
    },
    {
      "value_type": "numbers",
      "name": "first_non_zero",
      "hint": "Simplest statistics: value of the 1st non-zero pixel at the labelled object"
    },
    {
      "value_type": "mat",
      "name": "paint_labelled",
      "hint": "[Optional] Matrix where all labelled objects are filled by some (selected) calculated statistics"
    }
  ],
  "controls": [
    {
      "name": "rawValues",
      "caption": "Use raw values (not normalized)",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    },
    {
      "name": "lowPercentile",
      "caption": "Low percentile",
      "description": "Some \"low percentile\" level. Level 0.0 means miminum, level 1.0 means maximum from all pixels at the labelled object.\nIf \"Separate percentiles for each channel\" flag is set, you can specify here and below (for high percentile and for percentiles A, B, C) several levels l₁,l₂,...,lₘ; then l₁ level will be used for 1st channel, l₂ for the 2nd channel, etc.; lₘ level will be used for all channels #m, #m+1,...",
      "value_type": "String",
      "edition_type": "value",
      "default": "0.2"
    },
    {
      "name": "highPercentile",
      "caption": "High percentile",
      "description": "Some \"high percentile\" level, usually greater than the low one. Level 0.0 means miminum, level 1.0 means maximum from all pixels at the labelled object. If it isn't set (an empty string), it is replaced with 1 − (low percentile).",
      "value_type": "String",
      "edition_type": "value",
      "default": ""
    },
    {
      "name": "percentileA",
      "caption": "Additional percentile A",
      "value_type": "String",
      "edition_type": "value",
      "default": ""
    },
    {
      "name": "percentileB",
      "caption": "Additional percentile B",
      "value_type": "String",
      "edition_type": "value",
      "default": ""
    },
    {
      "name": "percentileC",
      "caption": "Additional percentile C",
      "value_type": "String",
      "edition_type": "value",
      "default": ""
    },
    {
      "name": "channelPercentiles",
      "caption": "Separate percentiles for each channel",
      "description": "If this flag is set, the percentiles and all statistics, based on them, are simply calculated for each channel separately. \"Level\" matrix is ignored. It is usually not a good solution: for example, maximum values for each channel R, G, B may describe some \"strange\" color, not really existing on the picture. See also comments to \"level\" input port.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true
    },
    {
      "name": "separateChannelPercentilesList",
      "caption": "Additional separate-percentile channels",
      "value_type": "String",
      "edition_type": "value",
      "description": "You can specify here comma-separated list of channel indexes, for example, \"0, 2\" (zero-based).  Then the percentiles for channels with these indexes will be calculated separately, even if \"Separate percentiles for each channel\" flag is NOT set. If that flag is set, this list is ignored.",
      "default": ""
    },
    {
      "name": "levelChannel",
      "caption": "Level's matrix channel",
      "value_type": "int",
      "edition_type": "value",
      "description": "If \"Separate percentiles for each channel\" flag is not set, the actual levels will be the channel of \"levels\" matrix (or the source matrrix, if \"levels\" is not specified) with this index (or its last channel if this parameter ≥ number of channels). Normally, \"levels\" matrix should be monochrome (1 channel), and then this index has no effect. But if \"levels\" is a color matrix or skipped, we can set this parameter, for example, to 1 for RGB (green channel is visually \"main\" channel) or to 2 fo HSV (V channel).",
      "default": 0
    },
    {
      "name": "paintedParameter",
      "caption": "Parameter, drawn in \"paint_labelled\" and visible",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "MEAN",
          "caption": "mean: average value of all pixels at the labelled object"
        },
        {
          "value": "STANDARD_DEVIATION",
          "caption": "standard deviation of the values of all pixels at the labelled object"
        },
        {
          "value": "LOW_PERCENTILE",
          "caption": "low percentile of pixel values at the labelled object"
        },
        {
          "value": "HIGH_PERCENTILE",
          "caption": "high percentile of pixel values at the labelled object"
        },
        {
          "value": "PERCENTILE_A",
          "caption": "additional percentile A of pixel values at the labelled object"
        },
        {
          "value": "PERCENTILE_B",
          "caption": "additional percentile B of pixel values at the labelled object"
        },
        {
          "value": "PERCENTILE_C",
          "caption": "additional percentile C of pixel values at the labelled object"
        },
        {
          "value": "PERCENTILES_RANGE",
          "caption": "percentiles range: difference high percentile − low percentile"
        },
        {
          "value": "TRUNCATED_MEAN",
          "caption": "truncated mean: average of pixels, which are ≥low percentile and ≤high percentile"
        },
        {
          "value": "CARDINALITY",
          "caption": "cardinality (area): number of pixels of the labelled object"
        },
        {
          "value": "FIRST_NON_ZERO",
          "caption": "first_non_zero: value of the 1st non-zero pixel at the labelled object"
        }
      ],
      "default": "MEAN"
    },
    {
      "name": "paintLabelledOnSource",
      "caption": "Use input matrix as background for paint_labelled port (if it's requested)",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    },
    {
      "name": "visiblePaintLabelled",
      "caption": "paint_labelled port is visible (intead of result numbers)",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    }
  ]
}
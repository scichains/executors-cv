{
  "app": "executor",
  "version": "0.0.1",
  "category": "matrices.filtering",
  "name": "Bilateral texture filter",
  "tags": [
    "matrices"
  ],
  "id": "ab832d9a-10a0-4423-9835-b2e42732b3b8",
  "language": "java",
  "java": {
    "class": "net.algart.executors.modules.opencv.matrices.filtering.BilateralTextureFilter"
  },
  "in_ports": [
    {
      "value_type": "mat",
      "name": "input"
    }
  ],
  "out_ports": [
    {
      "value_type": "mat",
      "name": "output"
    }
  ],
  "controls": [
    {
      "name": "filterRadius",
      "value_type": "int",
      "edition_type": "value",
      "default": 5
    },
    {
      "name": "numberOfIterations",
      "value_type": "int",
      "edition_type": "value",
      "default": 1
    },
    {
      "name": "sigmaAlpha",
      "value_type": "double",
      "edition_type": "value",
      "default": -1
    },
    {
      "name": "sigmaAvg",
      "value_type": "double",
      "edition_type": "value",
      "default": -1
    },
    {
      "caption": "Optimizing scale",
      "hint": "If >1, the image is compressed in \"scale\" times before processing and the result is stretched back to original sizes after processing.\nIt allows to essentially increase speed of processing.",
      "name": "optimizingScale",
      "value_type": "double",
      "edition_type": "value",
      "default": 1.0
    },
    {
      "caption": "Use GPU",
      "name": "useGPU",
      "hint": "Use OpenCV GPU optimization when possible",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true
    }
  ]
}